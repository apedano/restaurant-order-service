## DATA SOURCE config ##
# data source configuration for production, when building the application, and for Live Coding
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=restaurant-user
quarkus.datasource.password=restaurant-password
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/restaurant
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
#the sql script containing initialization data
quarkus.hibernate-orm.sql-load-script=sql/import.sql

## KAFKA config ##

kafka.bootstrap.servers=localhost:29092
#new-order topic
mp.messaging.incoming.new-order.connector=smallrye-kafka
mp.messaging.incoming.new-order.topic=new-order
mp.messaging.incoming.new-order.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.new-order.value.deserializer=com.apedano.order.service.serialization.NewOrderDeserializer
#ordered-dishes topic
mp.messaging.incoming.new-order.connector=smallrye-kafka
mp.messaging.incoming.new-order.topic=new-order
mp.messaging.incoming.new-order.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.new-order.value.deserializer=com.apedano.order.service.serialization.NewOrderDeserializer
#dish-served
mp.messaging.incoming.dish-served.connector=smallrye-kafka
mp.messaging.incoming.dish-served.topic=dish-served
mp.messaging.incoming.dish-served.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.dish-served.value.deserializer=com.apedano.restaurant.common.KitchenOrderDtoDeserializer
#order-updates Topic
mp.messaging.outgoing.order-updates.connector=smallrye-kafka
mp.messaging.outgoing.order-updates.topic=order-updates
mp.messaging.outgoing.order-updates.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.order-updates.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
#kitchen-incoming
mp.messaging.outgoing.kitchen-incoming.connector=smallrye-kafka
mp.messaging.outgoing.kitchen-incoming.topic=kitchen-incoming
mp.messaging.outgoing.kitchen-incoming.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.kitchen-incoming.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer